{"version":3,"file":"vue-slide-toggle.iife.min.js","sources":["../src/SlideToggle.js","../src/index.js"],"sourcesContent":["export default {\n  name: 'VueSlideToggle',\n\n  props: {\n    open: Boolean,\n    duration: {\n      type: Number,\n      default: 300,\n    },\n    tag: {\n      type: String,\n      default: 'div',\n    },\n  },\n\n  data () {\n    return {\n      scrollHeight: 0,\n      doneOpenTransition: false,\n      innerOpen: this.open,\n    }\n  },\n\n  mounted () {\n    window.addEventListener('resize', this.getHeight) // recalc height on resize window\n    this.getHeight()\n  },\n\n  updated () {\n    this.getHeight() // recalc for dynamic change content\n  },\n\n  destroyed () {\n    window.removeEventListener('resize', this.getHeight)\n  },\n\n  watch: {\n    open(bool) {\n      if (!bool) {\n        this.getHeight()\n        this.doneOpenTransition = false;\n        this.$nextTick().then(() => {\n          this.innerOpen = false;\n        })\n      } else {\n        this.innerOpen = true;\n      }\n    }\n  },\n\n  computed: {\n    style () {\n      if (this.innerOpen && this.doneOpenTransition) return null;\n\n      const heightSize = this.innerOpen ? this.scrollHeight : 0\n\n      return {\n        overflow: 'hidden',\n        transitionProperty: 'height',\n        height: `${heightSize}px`,\n        transitionDuration: `${this.duration}ms`,\n      }\n    },\n  },\n\n  methods: {\n    getHeight () {\n      const { container } = this.$refs\n      this.scrollHeight = container.scrollHeight\n    },\n\n    handleTransition () {\n      if (this.innerOpen) {\n        this.doneOpenTransition = true;\n      }\n    }\n  },\n\n  render (h) {\n    return h(\n      this.tag,\n      {\n        style: this.style,\n        ref: 'container',\n        on: {\n          transitionend: this.handleTransition,\n        }\n      },\n      this.$slots.default\n    )\n  },\n}\n","import SlideToggle from './SlideToggle'\n\nfunction install (Vue) {\n  if (install.installed) return\n  install.installed = true\n  Vue.component('VueSlideToggle', SlideToggle)\n}\n\nconst plugin = {\n  install,\n}\n\nexport const VueSlideToggle = SlideToggle\n\nlet GlobalVue = null\nif (typeof window !== 'undefined') {\n  GlobalVue = window.Vue\n}\n\nif (GlobalVue) {\n  GlobalVue.use(plugin)\n}\n\nexport default plugin\n"],"names":["Boolean","Number","String","this","open","addEventListener","getHeight","removeEventListener","bool","innerOpen","doneOpenTransition","$nextTick","then","heightSize","scrollHeight","duration","container","$refs","h","tag","style","handleTransition","$slots","default","plugin","install","Vue","installed","component","SlideToggle","VueSlideToggle","GlobalVue","window","use"],"mappings":";;;;;wDACQ,6BAGEA,uBAEEC,eACG,eAGHC,eACG,4CAMK,sBACM,YACTC,KAAKC,iCAKXC,iBAAiB,SAAUF,KAAKG,gBAClCA,qCAIAA,yCAIEC,oBAAoB,SAAUJ,KAAKG,iCAIrCE,cACEA,OAOEC,WAAY,QANZH,iBACAI,oBAAqB,OACrBC,YAAYC,KAAK,aACfH,WAAY,qCAUjBN,KAAKM,WAAaN,KAAKO,mBAAoB,OAAO,SAEhDG,EAAaV,KAAKM,UAAYN,KAAKW,aAAe,kBAG5C,4BACU,0BACTD,qCACYV,KAAKY,oDAOtBC,EAAcb,KAAKc,MAAnBD,eACHF,aAAeE,EAAUF,0CAI1BX,KAAKM,iBACFC,oBAAqB,qBAKxBQ,UACCA,EACLf,KAAKgB,WAEIhB,KAAKiB,UACP,8BAEYjB,KAAKkB,mBAGxBlB,KAAKmB,OAAOC,WChFlB,IAAMC,oBANGC,EAASC,GACZD,EAAQE,cACJA,WAAY,IAChBC,UAAU,iBAAkBC,MAOrBC,EAAiBD,EAE1BE,EAAY,WACM,oBAAXC,WACGA,OAAON,KAGjBK,KACQE,IAAIT"}